# .github/workflows/deploy-backend.yml

name: Deploy Code Backend Lambda Functions

on:
  push:
    branches:
      - main

# --- FIX #1: UN-INDENTED THIS ENTIRE BLOCK ---
# The 'env' block must be at the top level, at the same indentation as 'name', 'on', and 'jobs'.
env:
  ECR_REPOSITORY: momotaro-lex-bot
  AWS_REGION: ca-central-1
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # --- FIX #2: ADDED THE ESSENTIAL CHECKOUT STEP ---
      # This step must come first to make your code available to the workflow.
      - name: Checkout Code
        uses: actions/checkout@v4

      # This step assumes a GitHub secret named 'AWS_IAM_ROLE_FOR_OIDC_ARN'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_FOR_OIDC_ARN }}
          aws-region: ${{ env.AWS_REGION }} # Using the env var for consistency

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build, Tag, and Push Image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          ECR_REPOSITORY_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}"
          docker build -t $ECR_REPOSITORY_URI:latest .
          docker tag $ECR_REPOSITORY_URI:latest $ECR_REPOSITORY_URI:${IMAGE_TAG}
          docker push $ECR_REPOSITORY_URI:latest
          docker push $ECR_REPOSITORY_URI:${IMAGE_TAG}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ./infrastructure

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infrastructure